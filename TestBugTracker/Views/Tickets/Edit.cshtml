@model TestBugTracker.Models.Ticket

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-valIDation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <input type="hidden" asp-for="UserID" />
            <input type="hidden" asp-for="DateCreation" />
            <input type="hidden" asp-for="Status" />            
            <div class="form-group">
                <label asp-for="ShortDescription" class="control-label"></label>
                <input asp-for="ShortDescription" class="form-control" />
                <span asp-valIDation-for="ShortDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DetailedDescription" class="control-label"></label>
                <textarea asp-for="DetailedDescription" class="form-control"></textarea>
                <span asp-valIDation-for="DetailedDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Urgency" class="control-label"></label>
                <select asp-for="Urgency" class="form-control" asp-items="Html.GetEnumSelectList<TestBugTracker.Models.Urgency>()"></select>
                <span asp-valIDation-for="Urgency" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Criticality" class="control-label"></label>
                <select asp-for="Criticality" class="form-control" asp-items="Html.GetEnumSelectList<TestBugTracker.Models.Criticality>()"></select>
                <span asp-valIDation-for="Criticality" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

@if (Model.Status != Status.Closed)
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="ChangeStatus">

                <input type="hidden" asp-for="ID" />
                <div class="form-group">
                    <label class="control-label">Comment</label>
                    <textarea class="form-control" required name="Comment"></textarea>
                </div>
                <div class="form-group">
                    <button type="submit" name="down" value="false" class="btn btn-default">@(Model.Status + 1)</button>
                    @if (Model.TicketStatus.IsOpenable)
                    {
                        <button type="submit" name="down" value="true" class="btn btn-default">@(Model.Status - 1)</button>
                    }
                </div>

            </form>
        </div>
    </div>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

<h4>Ticket History</h4>
<hr />
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TicketHistories.First().Action)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TicketHistories.First().User)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TicketHistories.First().DateOfChange)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TicketHistories.First().Comment)
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.TicketHistories.OrderByDescending(t => t.DateOfChange))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Action)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfChange)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
